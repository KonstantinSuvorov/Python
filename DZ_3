# 22. Задайте список из нескольких чисел.
# Напишите программу, которая найдёт сумму элементов списка,
# стоящих на нечётной позиции.
# Пример:
# [2, 3, 5, 9, 3] -> на нечётных позициях элементы 3 и 9, ответ: 12

# my_list = [2, 3, 5, 9, 3]
# print(sum(my_list[1::2]))


# 23. Напишите программу, которая найдёт произведение пар чисел списка.
# Парой считаем первый и последний элемент, второй и предпоследний и т.д.
# Если остается 1 элемент без пары - умножаем его самого на себя.
# Пример:
# [2, 3, 4, 5, 6] => [12, 15, 16];
# [2, 3, 5, 6] => [12, 15]

# my_list = [2, 3, 4, 5, 6]
# result_list = []
# for i in range((len(my_list)+1)//2):
#     result_list.append(my_list[i]*my_list[len(my_list)-1-i])
# print(result_list)


# 24. Задайте список из вещественных чисел. Напишите программу,
# которая найдёт разницу между максимальным и минимальным 
# значением дробной части элементов.
# Пример:
# [1.1, 1.2, 3.1, 5, 10.01] => 0.19

# lst = [1.1, 1.2, 3.1, 5, 10.01]
# new_lst = [round(i % 1, 2) for i in lst if i % 1 != 0]
# print(round(max(new_lst) - min(new_lst), 2)) 


# 25. Напишите программу, которая будет преобразовывать десятичное число 
# в двоичное.
# Пример:
# - 45 -> 101101
# - 3 -> 11
# - 2 -> 10

# Вариант 1
# def binary(k: int) -> str:
#     bin_k = f'{k % 2}'
#     while k // 2 != 0:
#         k = k // 2
#         bin_k = f'{k % 2}' + bin_k
#     bin_k = int(bin_k)
#     return bin_k
# k = int(input('Введите натуральное число: '))
# b = binary(k)
# print(f'{k} -> {b}')

# Вариант 2 - встроенная функция в Python
# k = int(input('Введите натуральное число: '))
# print(f'{k} -> {bin(k)[2:]}')


# 26. Задайте число. Составьте список чисел Фибоначчи, 
# в том числе для отрицательных индексов. 
# Пример:
# для k = 8 список будет выглядеть так: 
# [-21 ,13, -8, 5, −3, 2, −1, 1, 0, 1, 1, 2, 3, 5, 8, 13, 21]

# Вариант 1
# def get_fibonacci(n):
#     fibo_nums = []
#     a, b = 1, 1
#     for i in range(n):
#         fibo_nums.append(a)
#         a, b = b, a + b
#     a, b = 0, 1
#     for i in range (n+1):
#         fibo_nums.insert(0, a)
#         a, b = b, a - b
#     return fibo_nums

# k = int(input('Введите целое положительное число: '))
# print(get_fibonacci(k))

# Вариант 2
# def Fibonacci(n):
#     if n in [1, 2]:                       
#         return 1
#     else:
#         return Fibonacci(n-1) + Fibonacci(n-2)

# def NegaFibonacci(n):
#     if n == 1:                       
#         return 1
#     elif n == 2:                       
#         return -1
#     else:
#         num1, num2 = 1, -1
#         for i in range(2, n):
#             num1, num2 = num2, num1 - num2
#         return num2

# list = [0]
# k = int(input('Введите целое положительное число: '))
# for i in range(1, k + 1):
#     list.append(Fibonacci(i))
#     list.insert(0, NegaFibonacci(i))
# print(list)


# Вариант 3 - для k больше 2
def fibonacci_list(k: int) -> list:
    fib_list = [-1, 1, 0, 1, 1]
    for i in range(3, k+1):
        fib_list.append(fib_list[-2] + fib_list[-1])
        fib_list.insert(0, fib_list[1] - fib_list[0])
    return fib_list

k = int(input('Введите натуральное число, большее 2: '))
print(fibonacci_list(k))
